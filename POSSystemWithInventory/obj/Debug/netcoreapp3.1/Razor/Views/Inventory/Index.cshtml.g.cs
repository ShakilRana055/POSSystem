#pragma checksum "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Inventory_Index), @"mvc.1.0.view", @"/Views/Inventory/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory.EntityModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb2", @"/Views/Inventory/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64b6b5139d3f04192678769d821201b7c793563f", @"/Views/_ViewImports.cshtml")]
    public class Views_Inventory_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<POSSystemWithInventory.Models.PurchaseProductVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("display:none;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("control-label"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control select2"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("text-danger"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Cash", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Card", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "Mobile Banking", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("purchaseCreateForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
  
    ViewData["Title"] = "Purchase Product";
    Layout = "~/Views/Shared/_POSLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    
    #purchaseProductTable th, td:nth-child(1){
        width:15% !important;
    }
    #purchaseProductTable th, td:nth-child(2){
        width:14% !important;
    }
    #purchaseProductTable th, td:nth-child(3){
        width:14% !important;
    }
    #purchaseProductTable th, td:nth-child(4){
        width:17% !important;
    }
    #purchaseProductTable th, td:nth-child(5){
        width:14% !important;
    }
    #purchaseProductTable th, td:nth-child(6){
        width:11% !important;
    }
    #purchaseProductTable th, td:nth-child(7){
        width:5% !important;
    }
    
    #purchaseProductTable tbody, tr:nth-child(2n+1) {
        background-color: #ccffcc;
    }
    #purchaseProductTable tbody, tr:nth-child(2n+2) {
        background-color: #e6ccff;
    }
    
    .rightAlign {
        text-align: right;
    }
    .redColor{
        border-color:red;
    }

</style>

<div class=""row"">
    <div class=""col-md-12"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb28827", async() => {
                WriteLiteral(@"
            <div class=""card"">
                <div id=""headingOne"" class=""card-header bg-blue1"">
                    <button type=""button"" data-toggle=""collapse"" data-target=""#Collapse"" aria-expanded=""true"" class=""text-left m-0 p-0 btn btn-block"" style=""box-shadow: none;"">
                        <h5 class=""m-0 p-0"" style=""color: #fff;"">Purchase Product</h5>
                    </button>
                </div>
                <div class=""card-body"">
                    <div id=""Collapse"" class=""collapse show"">
                        <h3 style=""text-align:center;"">Invoice No.# <span id=""invoiceNumber""></span></h3>
                        <h5 style=""text-align:center;"">Date: ");
#nullable restore
#line 59 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
                                                        Write(DateTime.Now.ToString("dd MMM yyyy"));

#line default
#line hidden
#nullable disable
                WriteLiteral("</h5>\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb210145", async() => {
                    WriteLiteral("\r\n\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
#nullable restore
#line 60 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.PurchaseProductDetail.VatAndTaxId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 60 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.VatItem;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb212500", async() => {
                    WriteLiteral("Supplier Name");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 66 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.SupplierId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb214174", async() => {
                    WriteLiteral("\r\n                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb214483", async() => {
                        WriteLiteral("-----Select-----");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 67 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.SupplierId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 67 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.SupplierItem;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb217692", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 70 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.SupplierId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-4\">\r\n                                <div class=\"form-group\">\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("label", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb219582", async() => {
                    WriteLiteral("Product Name");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper);
#nullable restore
#line 75 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.PurchaseProductDetail.ProductId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_LabelTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb221276", async() => {
                    WriteLiteral("\r\n                                        ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb221585", async() => {
                        WriteLiteral("-----Select-----");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
#nullable restore
#line 76 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.PurchaseProductDetail.ProductId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
#nullable restore
#line 76 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = Model.ProductItem;

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("span", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb224814", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper);
#nullable restore
#line 79 "G:\Core\POSSystemWithInventory\POSSystemWithInventory\Views\Inventory\Index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.PurchaseProductDetail.ProductId);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-validation-for", __Microsoft_AspNetCore_Mvc_TagHelpers_ValidationMessageTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                </div>
                            </div>
                            <div class=""col-md-4"">
                                <div class=""form-group"" style=""margin-top: 22px;"">
                                    <button type=""button"" id=""purchaseAddBtn"" class=""btn btn-success btn-sm"">Add</button>
                                </div>
                            </div>
                        </div>
                        <div class=""row table-responsive"">
                            <table class=""table table-bordered table-hover"" id=""purchaseProductTable"">
                                <thead>
                                    <tr style=""background-color: #9999ff; font-weight:900; color:black; text-align:center;"">
                                        <th>Name</th>
                                        <th>Quantity</th>
                                        <th>Unit Price</th>
                                        <th>Vat&Tax</th>
               ");
                WriteLiteral(@"                         <th>Price</th>
                                        <th>Sell Price</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id=""purchaseProductTBody"">
                                </tbody>
                                <tfoot>
                                    <tr style=""background-color: #9999ff;font-weight: 900;color: black;"">
                                        <td colspan=""4"" align=""right"">Sub total</td>
                                        <td id=""subTotal"" align=""right""></td>
                                        <td colspan=""2""></td>
                                    </tr>
                                    <tr style=""font-weight: 900;color: black;"">
                                        <td colspan=""4"" align=""right"">Discount</td>
                                        <td id=""discount"">
                          ");
                WriteLiteral(@"                  <input type=""number"" style=""width:90% !important; float: left;"" class=""form-control rightAlign"" id=""discountAmount"" />
                                            <span  style=""width: 10% !important;float: left; margin-top:7px;"">%</span>
                                        </td>
                                        <td colspan=""2""></td>
                                    </tr>
                                    <tr style=""font-weight: 900;color: black;"">
                                        <td colspan=""4"" align=""right"">Grand total</td>
                                        <td id=""grandTotal"" align=""right""></td>
                                        <td colspan=""2""></td>
                                    </tr>
                                    <tr style=""font-weight: 900;color: black;"">
                                        <td colspan=""4"" align=""right"">Paid Amount</td>
                                        <td><input type=""number"" class=""form-control rig");
                WriteLiteral(@"htAlign"" id=""paidAmount"" /></td>
                                        <td>Payment Mode</td>
                                        <td>
                                            <select class=""form-control"" id=""paymentMode"">
                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb230033", async() => {
                    WriteLiteral("Cash");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb231303", async() => {
                    WriteLiteral("Card");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bd7f1e60ab1340d3221dcbf12a7028da1b2fcbb232573", async() => {
                    WriteLiteral("Mobile Banking");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                            </select>
                                        </td>
                                    </tr>
                                    <tr style=""font-weight: 900; color: black;"">
                                        <td colspan=""4"" align=""right"">Dues</td>
                                        <td id=""dues"" align=""right""></td>
                                        <td colspan=""2""></td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary pull-right"" id=""purchaseResetBtn"">Reset</button>
                    <button type=""button"" id=""purchaseCreateBtn"" class=""btn btn-primary"">Save</button>
                </div>
            </div>
        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@" 
<script>
    
    (function () {
        let ajaxOperation = new AjaxOperation();
        let modalOperation = new ModalOperation();

        let selector = {
            invoiceNumber: $(""#invoiceNumber""),
            purchaseAddBtn: $(""#purchaseAddBtn""),
            vatItems: $(""#PurchaseProductDetail_VatAndTaxId""),
            productId: $(""#PurchaseProductDetail_ProductId""),
            purchaseProductTBody: $(""#purchaseProductTBody""),
            subTotal: $(""#subTotal""),
            grandTotal: $(""#grandTotal""),
            discountAmount: $(""#discountAmount""),
            paidAmount: $(""#paidAmount""),
            paymentMode: $(""#paymentMode""),
            dues: $(""#dues""),
            purchaseCreateBtn: $(""#purchaseCreateBtn""),
            purchaseResetBtn: $(""#purchaseResetBtn""),
            supplierId: $(""#SupplierId""),

            productIdInfo: "".productIdInfo"",
            quantityInfo: "".quantityInfo"",
            purchasePriceInfo: "".purchasePriceInfo"",
            ");
                WriteLiteral(@"vatAndTaxInfo: "".vatAndTaxInfo"",
            priceInfo: "".priceInfo"",
            sellPriceInfo: "".sellPriceInfo"",
            deleteInfo: "".deleteInfo"",

            rowId: 1,
            serialNumber: 1,
            selectedProduct: [],
        }

        class OnloadProcess {
            constructor() { }
            GetInvoiceNumber() {
                let invoiceNumber = ajaxOperation.GetAjax(""/Inventory/InvoiceNumber"");
                selector.invoiceNumber.text(invoiceNumber);
            }
        }

        class PurchaseProductDetail {
            constructor(InvoiceNumber, ProductId, Quantity, UnitPrice, VatId,  BasePrice, SellPrice ) {
                this.InvoiceNumber = InvoiceNumber;
                this.ProductId = ProductId;
                this.Quantity = Quantity;
                this.UnitPrice = UnitPrice;
                this.VatAndTaxId = VatId;
                this.BasePrice = BasePrice;
                this.SellPrice = SellPrice;
            }
        }

");
                WriteLiteral(@"        class Process{
            constructor() { }
            AddEntryColumn() {
                let productName = $(""#PurchaseProductDetail_ProductId option:selected"").text();

                // pushing into array for duplicate check
                selector.selectedProduct.push(selector.productId.val());

                let data = `<tr id =""rowId${selector.rowId}"">
                                <td><a class=""productIdInfo"" style = ""cursor:pointer; text-decoration:underline;"" serialNumber=""${selector.serialNumber}"" productId=""${selector.productId.val()}"">${productName}</a></td>
                                <td><input type=""number"" class=""form-control quantityInfo rightAlign"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td><input type=""number"" class=""form-control purchasePriceInfo rightAlign"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td>
                                    <div class=""form-group select2Class"">
 ");
                WriteLiteral(@"                                       <select class=""form-control vatAndTaxInfo select2"" serialNumber=""${selector.serialNumber}"">
                                            ${selector.vatItems.html()}
                                        </select>
                                    </div>
                                </td>
                                <td><input type=""number"" readonly=""readonly"" class=""form-control priceInfo rightAlign"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td><input type=""number"" class=""form-control sellPriceInfo rightAlign"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td>
                                    <button type = ""button"" class=""btn btn-danger deleteInfo btn-sm"" rowId=""rowId${selector.rowId}"" serialNumber=""${selector.serialNumber}""><i class=""fa fa-trash-alt""></i></button>
                                </td>
                            </tr>`;
                selector.rowId++;
  ");
                WriteLiteral(@"              selector.serialNumber++;
                return data;
               
            }
            CreateRow(productName, productId, quantityInfo, purchasePriceInfo, vatAndTaxInfo, priceInfo, sellPriceInfo) {
                let data = `<tr id =""rowId${selector.rowId}"">
                                <td><a class=""productIdInfo"" style = ""cursor:pointer; text-decoration:underline;"" serialNumber=""${selector.serialNumber}"" productId=""${productId}"">${productName}</a></td>
                                <td><input type=""number"" class=""form-control quantityInfo rightAlign"" value = ""${quantityInfo}"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td><input type=""number"" class=""form-control purchasePriceInfo rightAlign"" value = ""${purchasePriceInfo}"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td>
                                    <div class=""form-group select2Class"" >
                                        <select class=");
                WriteLiteral(@"""form-control vatAndTaxInfo select2"" value = ""${vatAndTaxInfo}"" serialNumber=""${selector.serialNumber}"">
                                            ${selector.vatItems.html()}
                                        </select>
                                    </div>
                                </td>
                                <td><input type=""number"" readonly=""readonly"" class=""form-control priceInfo rightAlign"" value = ""${priceInfo}"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td><input type=""number"" class=""form-control sellPriceInfo rightAlign""  value = ""${sellPriceInfo}"" serialNumber=""${selector.serialNumber}"" /></td>
                                <td>
                                    <button type = ""button"" class=""btn btn-danger deleteInfo btn-sm"" rowId=""rowId${selector.rowId}"" serialNumber=""${selector.serialNumber}""><i class=""fa fa-trash-alt""></i></button>
                                </td>
                            </tr>`;
            ");
                WriteLiteral(@"    selector.rowId++;
                selector.serialNumber++;
                return data;
            }
            QuickSortOneD(arrayName) {
                arrayName.sort((a, b) => a - b);
                return arrayName;
            }
            BinarySearch(arrayName, value) {
                let search = arrayName.findIndex(x => x === value);
                return search;
            }
            ProductInformation(productId) {
                let htmlData = ajaxOperation.GetAjaxHtmlByValue(""/Product/ProductInformation"", productId);

                $(""#modalHeading"").text(""Product Information"");
                modalOperation.ModalStatic(""#informationModal"");
                modalOperation.ModalOpenWithHtml(""#informationModal"", ""#informationModalDiv"", htmlData);
            }
            GetInputValue(serialNumber, className) {
                let value = 1;
                $(className).each(function () {
                    if ($(this).attr(""serialNumber"") === serialNumber)");
                WriteLiteral(@" {
                        value = $(this).val();
                    }
                });
                return value;
            }
            SetInputValue(serialNumber, className, value) {
                $(className).each(function () {
                    if ($(this).attr(""serialNumber"") === serialNumber) {
                        $(this).val(value);
                    }
                });
            }
            CalculateBasePrice(quantity, purchasePrice, vatAndTax) {
                let price = quantity * purchasePrice;
                let addingVat = (price / 100) * vatAndTax;
                return (price + addingVat).toFixed(2);
            }
            CalculateDiscount(price, discount) {
                let decrement = (price / 100) * discount;
                return (price - decrement).toFixed(2);
            }
            VatAndTax(serialNumber, className) {
                let text = """"
                $(className).each(function () {
                    if ($(th");
                WriteLiteral(@"is).attr(""serialNumber"") === serialNumber) {
                        text = $(this).children(""option"").filter("":selected"").text();
                    }
                });
                if (text === """")
                    return 1;
                let vat = text.split(""|"");
                return Number(vat[1]);
            }
            Summation(className) {
                let value = 0;
                $(className).each(function () {
                     value += Number($(this).val());
                });
                return value.toFixed(2);
            }
            DeleteRow(deleteId) {
                let htmlData = """";
                let selfThis = this;
                selector.selectedProduct = [];
                $(""#purchaseProductTBody tr"").each(function (i, row) {
                    let iterateRow = row.id;
                    if (iterateRow != deleteId) {
                        let productName = $(this).find(""td .productIdInfo"").text();
                       ");
                WriteLiteral(@" let productId = $(this).find(""td .productIdInfo"").attr(""productId"");
                        let quantityInfo = $(this).find(""td .quantityInfo"").val();
                        let purchasePriceInfo = $(this).find(""td .purchasePriceInfo"").val();
                        let vatAndTaxInfo = $(this).find(""td .vatAndTaxInfo"").val();
                        let priceInfo = $(this).find(""td .priceInfo"").val();
                        let sellPriceInfo = $(this).find(""td .sellPriceInfo"").val();
                        selector.selectedProduct.push(productId);
                        htmlData += selfThis.CreateRow(productName, productId, quantityInfo, purchasePriceInfo, vatAndTaxInfo, priceInfo, sellPriceInfo);
                    }
                });
                return htmlData;
            }
            MultipleTask(serialNumber) {
                let quantity = this.GetInputValue(serialNumber, selector.quantityInfo);
                let purchasePrice = this.GetInputValue(serialNumber, selector.p");
                WriteLiteral(@"urchasePriceInfo);
                let vatAndTax = this.VatAndTax(serialNumber, selector.vatAndTaxInfo);

                let basePrice = this.CalculateBasePrice(Number(quantity), Number(purchasePrice), Number(vatAndTax));
                this.SetInputValue(serialNumber, selector.priceInfo, basePrice);
                let totalPrice = this.Summation(selector.priceInfo);

                selector.subTotal.text(totalPrice);
                selector.grandTotal.text(totalPrice);
                selector.paidAmount.val(totalPrice);
                selector.dues.text(0.0);
            }
            GiveRedColor(className) {
                let isOk = true;
                $(className).each(function () {
                    if ($(this).val() === """") {
                        $(this).addClass(""redColor"");
                        isOk = false;
                    }
                    else {
                        $(this).removeClass(""redColor"");
                    }
                });
      ");
                WriteLiteral(@"          return isOk;
            }
            Validation() {
                let quantity = this.GiveRedColor(selector.quantityInfo);
                let unitPrice = this.GiveRedColor(selector.purchasePriceInfo);
                let sellPrice = this.GiveRedColor(selector.sellPriceInfo);
                if (quantity && unitPrice && sellPrice)
                    return true;
                else
                    return false;
            }
            IterateOverTable(tableName) {
                let jsonData = [];
                $(tableName).each(function (i, row) {
                    let productId = $(this).find(""td .productIdInfo"").attr(""productId"");
                    let quantity = $(this).find(""td .quantityInfo"").val();
                    let unitPrice = $(this).find(""td .purchasePriceInfo"").val();
                    let vatAndTaxId = $(this).find(""td .vatAndTaxInfo"").val();
                    let basePrice = $(this).find(""td .priceInfo"").val();
                    let sell");
                WriteLiteral(@"Price = $(this).find(""td .sellPriceInfo"").val();
                    let invoiceNumber = selector.invoiceNumber.text();

                    let obj = new PurchaseProductDetail(invoiceNumber, productId, quantity, unitPrice, vatAndTaxId, basePrice, sellPrice);
                    jsonData.push(obj);
                });
                return jsonData;
            }
            MakeJsonData() {
                let details = this.IterateOverTable(""#purchaseProductTBody tr"");
                let jsonData = {
                    invoiceNumber: selector.invoiceNumber.text(),
                    supplierId: selector.supplierId.val(),
                    grandTotal: Number(selector.grandTotal.text()),
                    subTotal: Number(selector.subTotal.text()),
                    discount: selector.discountAmount.val(),
                    paidAmount: selector.paidAmount.val(),
                    dues: Number(selector.dues.text()),
                    paymentMode: selector.paymentMode.val(),
 ");
                WriteLiteral(@"                   purchaseProductDetails: details,
                };
                return jsonData;
            }
            ResetAll() {
                selector.supplierId.val("""").trigger(""change"");
                selector.productId.val("""").trigger(""change"");
                selector.purchaseProductTBody.html("""");

                selector.subTotal.text("""");
                selector.grandTotal.text("""");
                selector.discountAmount.val("""");
                selector.paymentMode.val(""Cash"");
                selector.paidAmount.val("""");
                selector.dues.text("""");
            }
        }

        let process = new Process();
        let loadingProcess = new OnloadProcess();
        window.onload = function () {
            let onloadProcess = new OnloadProcess();
            onloadProcess.GetInvoiceNumber();
        }
        
        selector.purchaseAddBtn.click(function (e) {
            e.preventDefault();
            let sortedArray = [];
          ");
                WriteLiteral(@"  sortedArray = process.QuickSortOneD(selector.selectedProduct);
            let search = process.BinarySearch(sortedArray, selector.productId.val());
            if (selector.supplierId.val() !== """" && selector.productId.val() !== """") {
                if (sortedArray.length === 0) {
                    let data = process.AddEntryColumn();
                    selector.purchaseProductTBody.append(data);
                }
                else {
                    if (search === -1) {
                        let data = process.AddEntryColumn();
                        let rowCount = selector.purchaseProductTBody.find(""tr"").length;
                        rowCount > 0 ? $(""#purchaseProductTBody tr:first"").before(data) : selector.purchaseProductTBody.append(data);
                    }
                    else {
                        toastr.error('Already taken!.', 'Error!');
                    }
                }
            }
            else {
                toastr.error('Please select ");
                WriteLiteral(@"Product or Supplier!.', 'Error!');
            }
            
            
        });

        $(document).on(""click"", selector.productIdInfo, function () {
            let productId = $(this).attr(""productId"");
            process.ProductInformation(productId);
        });

        $(document).on(""keyup"", selector.quantityInfo, function () {
            let serialNumber = $(this).attr(""serialNumber"");
            process.MultipleTask(serialNumber);
        });

        $(document).on(""keyup"", selector.purchasePriceInfo, function () {
            let serialNumber = $(this).attr(""serialNumber"");
            process.MultipleTask(serialNumber);
        });

        $(document).on(""change"", selector.vatAndTaxInfo, function () {
            let serialNumber = $(this).attr(""serialNumber"");
            process.MultipleTask(serialNumber);
        });

        selector.discountAmount.keyup(function () {
            let discountAmount = $(this).val();
            let subTotal = selector.sub");
                WriteLiteral(@"Total.text();
            let discount = process.CalculateDiscount(subTotal, discountAmount);
            selector.grandTotal.text(discount);
            selector.paidAmount.val(discount);
        });

        selector.paidAmount.keyup(function () {
            let grandTotal = Number(selector.grandTotal.text());
            let paidAmount = $(this).val();
            let decrement = grandTotal - paidAmount;
            if (decrement < 0) {
                toastr.error(""Invalid Paid Amount!"", ""Error!"");
                $(this).val(grandTotal);
                selector.dues.text(0);
            }
            else {
                selector.dues.text(decrement.toFixed(2));
            }
        });

        $(document).on(""click"", selector.deleteInfo, function () {
            let rowId = $(this).attr(""rowId"");
            let htmlData = process.DeleteRow(rowId);
            selector.purchaseProductTBody.html(htmlData);

            let totalPrice = process.Summation(selector.priceInfo)");
                WriteLiteral(@";
            selector.subTotal.text(totalPrice);
            selector.grandTotal.text(totalPrice);
            selector.paidAmount.val(totalPrice);
            selector.dues.text(0.0);
        });

        selector.purchaseCreateBtn.click(function () {
            if (process.Validation()) {
                let jsonData = process.MakeJsonData();
                let response = ajaxOperation.SavePostAjax(""/Inventory/Index"", jsonData);
                if (response) {
                    toastr.success(""Successfully Saved!"", ""Success!"");
                    process.ResetAll();
                    loadingProcess.GetInvoiceNumber();
                }
            }
            else {
                toastr.error(""Fill up the form"", ""Error!"");
            }
        });
        selector.purchaseResetBtn.click(function () {
            process.ResetAll();
        })
    })();
</script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<POSSystemWithInventory.Models.PurchaseProductVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
