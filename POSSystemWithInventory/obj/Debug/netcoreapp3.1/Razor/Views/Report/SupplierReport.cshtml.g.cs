#pragma checksum "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\Report\SupplierReport.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4bdb185fb3fa8eaff79711c92deb73563eebd55c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Report_SupplierReport), @"mvc.1.0.view", @"/Views/Report/SupplierReport.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\_ViewImports.cshtml"
using POSSystemWithInventory.EntityModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4bdb185fb3fa8eaff79711c92deb73563eebd55c", @"/Views/Report/SupplierReport.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64b6b5139d3f04192678769d821201b7c793563f", @"/Views/_ViewImports.cshtml")]
    public class Views_Report_SupplierReport : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\ahasa\OneDrive\Desktop\POS\POSSystem\POSSystemWithInventory\Views\Report\SupplierReport.cshtml"
  
    ViewData["Title"] = "Supplier Report";
    Layout = "~/Views/Shared/_POSLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .odd {
        background-color: #b3ffff;
    }

    .even {
        background-color: #b3b3ff;
    }

    .rightAlign {
        text-align: right;
    }

    .centerAlign {
        text-align: center;
    }

    #stockList tr td {
        font-weight: bold;
    }
</style>
<div class=""row"">
    <div class=""col-md-12"">
        <div class=""card"">
            <div id=""headingOne"" class=""card-header bg-blue1"">
                <button type=""button"" data-toggle=""collapse"" data-target=""#advanceSearchProductList"" aria-expanded=""true"" class=""text-left m-0 p-0 btn btn-block"" style=""box-shadow: none;"">
                    <h5 class=""m-0 p-0"" style=""color: #fff;"">Supplier Report</h5>
                </button>
            </div>
            <div class=""card-body"">
                <div id=""advanceSearchProductList"" class=""collapse show"">
");
            WriteLiteral(@"                    <div class=""row table-responsive"" id=""printSupplierReport"">
                        <table class=""table table-hover table-bordered"" id=""stockList"">
                            <thead style=""background-color:coral;"">
                                <tr>
                                    <th>Supplier Name</th>
                                    <th>Total Purchase</th>
                                    <th>Total Payable</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                            <tfoot style=""background-color:coral;"">
                                <tr>
                                    <td></td>
                                    <td class=""rightAlign"" id=""totalPrice""></td>
                                    <td class=""rightAlign"" id=""totalDues""></td>
                                </tr>
                            </tfoot>
                    ");
            WriteLiteral("    </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        (function () {

            let selector = {
                productList: $(""#stockList""),
                totalPrice: $(""#totalPrice""),
                totalDues: $(""#totalDues""),
                printBtnSupplierReport: $(""#printBtnSupplierReport""),
            };

            function GenerateBrandList() {
                let totalPrice = 0;
                let totalDues = 0;
                var brandList = selector.productList.dataTable({
                    ""processing"": true,
                    ""serverSide"": true,
                    ""filter"": true,
                    ""pageLength"": 10,
                    ""autoWidth"": false,
                    'dom': ""<'row'<'col-sm-3'l><'col-sm-5 text-center'B><'col-sm-4'f>>"" + ""<'row'<'col-sm-12'tr>>"" + ""<'row'<'col-sm-5'i><'col-sm-7'p>>"",
                    ""lengthMenu"": [[10, 50, 100, 150, 200, 500], [10, 50, 100, 150, 200, 500]],
                    ""order"": [[0, ""desc""]],
                    ""ajax"": {
              ");
                WriteLiteral(@"          ""url"": ""/Report/SupplierReportList/"",
                        ""type"": ""POST"",
                        ""data"": function (data) {

                        },
                        ""complete"": function (json) {

                        }
                    },
                    ""columnDefs"": [
                        { ""className"": ""centerAlign"", ""targets"": [0] },
                        { ""className"": ""rightAlign"", ""targets"": [1,2] },
                    ],
                    ""columns"": [
                        { ""data"": ""updatedBy"", ""name"": ""updatedBy"", ""autowidth"": true, ""orderable"": true },
                        { ""data"": ""grandTotal"", ""name"": ""grandTotal"", ""autowidth"": true, ""orderable"": true },
                        { ""data"": ""dues"", ""name"": ""dues"", ""autowidth"": true, ""orderable"": true },
                        
                    ],
                    ""footerCallback"": function (row, data, start, end, display) {
                        var api = this.api(), data;");
                WriteLiteral(@"
                        var intVal = function (i) {
                            return typeof i === 'string' ?
                                i.replace(/[\$,]/g, '') * 1 :
                                typeof i === 'number' ?
                                    i : 0;
                        };

                        let column1 = intVal;
                        let column2 = intVal;

                        let grandTotal = api
                            .column(1)
                            .data()
                            .reduce(function (a, b) {
                                return column1(a) + column1(b);
                            }, 0);

                        let duesAmount = api
                            .column(2)
                            .data()
                            .reduce(function (a, b) {
                                return column2(a) + column2(b);
                            }, 0);


                        $(api.column(1).footer()).html(");
                WriteLiteral(@"""="" + grandTotal + ""/-"");
                        $(api.column(2).footer()).html(""="" + duesAmount + ""/-"");
                    }
                });

            }

            window.onload = function () {
                GenerateBrandList();
            }
            selector.printBtnSupplierReport.click(function () {
                printDiv(""printSupplierReport"");
            })
        })();
    </script>
");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
